
# Comments  Списки (list). Функции и их методы в Pyton

# Списки данных максимально схожи с пременными только в переменной мы можем хранить
# одно значение а в списке набор из нескольких значений элементов
# [] -  создание списка (массива данных) - список состоящий из множества разных значений
# В Python можно хранить разные значения с разными типами данных в списках
# Индекс в списках начинается с - 0, тоесть  nums[0] = 50 - заменит 5 на 50
# Менять типы данных можно к примеру nums[5] = 1.05 - заменит 1.05 на True
# print(nums[3]) - отобразит третий элемент в списке тоесть 8
# print(nums[-1][1]) - отобразит элемент вложенного списка тоесть 7

# Example 1

nums = [5, 2, 6, 8, 7, True, "Hello", 6.7]

nums[0] = 50
nums[5] = 1.05

print(nums[3])

# Example 2

nums = [5, 2, 6, 8, 7, True, "Hello", 6.7, [5, 7]]           # Вложеный список с элементами

print(nums[-1][1])                                           # -1 - отрицательный индексы отобразит последний элемент из списка
                                                             # Изятие последнего элемента из списка

# Example 3

numbers = [5, 2, 7]
numbers[3] = 100                                       # пример при котором нельзя добавить значение к несуществующему индексу

numbers.append(100)                                    # append - метод добавление значения в конец списка можно добавлять разные типы данных ( True, 10, 25.2)
numbers.append(True)                                   # append - можно вызвать большое колличество раз с разным типом данных и всегда он будет добавлять в конец списка.

numbers.insert(1, True)                                # insert - установить значение по опредиленному индексу тоесть в примере будет добавлено значение True между 5 и 2.
                                                       # так же можно установить любой тип данных

print(numbers)


# Example 4

numbers = [5, 2, 7]

numbers.extend([5, 6, 8])                               # Поместить набор из несколькиз элементов разных типов
                                                        # в конец списка будут добавлены элементы
print(numbers)                                          # метод extend позволяет расширить первоначальный список на множество дополнительных элементов

# Example 5

numbers = [5, 2, 7]

b = [5, 6, 8]
numbers.extend(b)                                       # Поместить набор из несколькиз элементов разных типов
                                                        # в конец списка будут добавлены элементы c использованием переменной
print(numbers)                                          # метод extend позволяет расширить первоначальный список на множество дополнительных элементов

# Example 6

numbers = [5, 2, 7]

b = [5, 6, 8, True, False]

numbers.extend(b)

numbers.sort()                                            # Метод сортировки sort
numbers.reverse()                                         # True - 1 - второй элемент в списке сортировки
numbers.pop()                                             # False - 0 - первый элемент в списке сортировки
                                                          # reverse - метод отображения наоборот
                                                          # pop - удаление последнего элемента в списке - можно вызывать много раз
                                                          # pop - так же можно указать индекс удаляемого элемента в списке, так же можно указать отрицательный индекс и удаление будет происходить с конца списка
numbers.remove(True)                                      # remove - удалить элемент в списке по опредиленному указвному значению

numbers.clear()                                           # clear - удвление полностью всего списка

print(numbers.count(True))                                # count - подсчет колличества найденых указаных совпадений


# Example 7

numbers = [5, 2, 7]

b = [5, 6, 8, True, False]

numbers.extend(b)

print(len(numbers))                                       # len - отображает длинну колличество элементов в списке


# Example 8

nums = [5, 2, 7, "50", False]                             # Данный цикл умножит содержимое переменной
                                                          # element и отобразит содержимое
for elemnt in nums:
    elemnt *= 2
    print(elemnt)


# Example 9

nums = [5, 2, 7, "50", False]                             # Данный цикл отобразит содержимое списка nums

for elemnt in nums:
    print(elemnt)


# Example 10

n = int(input("Enter lenght: "))

user_list = []

i = 0
while i < n:
    string: str = "Enter element #" + str(i + 1) + ": "
    user_list.append(input(string))
    i += 1

print(user_list)                                          # Программа где мы просим от пользователя ввести число
                                                          # далее мы создаем цикл который будет идти от нуля до числа пользователя
                                                          # в этом же цикле мы каждый раз к нашему пустому списку добавляем новый элемент
                                                          # и этот элемент мы так же будем получать от пользователя далее наш индекс (переменную) будем увеличивать на единицу





















