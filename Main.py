
# Comments - Базовые операторы в Pyton

#1- sep - separete - разделители символов

#2- end="\n" - new line -\n -  начать вывод с новой строки, ->
# так же можно указать любой необходимый символ в конце end="!\n" - end конец строки ! - знак восклицания

#3- \ - символ перед кавычками выведет кавычки вывести как обычный символ

#4- "\nL\ni\nn\ne\n" - \n - перенос слова где каждая буква будет с новой строки

#5- \t L \ni\nn\ne\n") - \t -символ табуляции перед символом будет отступ

#6- , - запятая следующяя операция в строке

#7- 5 ** 2 - две звездочки пример возведения пятерки в квадрат либо в любую другую степень

#8- (+,-,*,/) - математические операторы

#9- // - оператор округления чисел к меньшему при делении

#10- min(5, 2, 4, 6, 7, 8, 9, -9) функция вывода минимального числа
#11- max(5, 2, 4, 6, 7, 8, 9, -9) - функция вывода максимального числа
#12- abs (-5) - функция поиска по модулям при вводе отрицательного числа будет вывод положительного но не наоборот
#13- print("Result:", pow(5,3)) - pow - аналог ** - функция возведения пятерки в третью степень
#14- print("Result:", round(5/3)) - round - функция округления к большему либо к меньшему

#15- input - функция получения данных от пользователя
#16- " " , ' ' - кавычки одинарные и двойные одно и тоже


# Example 1

print("Result:", round(5/3))
print("Result:", 5 / 2)
print("Hello programmer:" "8,5" ".", sep="",end="!\n")
print("Second \" \t \\ L \ni\nn\ne\n")

input("Введите свой возраст: ")
print("You Young")

# Example 2

x = "Hello"
print(type(x))   # узнать тип - <class 'str'>
                 # type - узнать тип данных

# Example 3

x,y,z = 1,2,3
print(x)         # множественное (кортежное) присваивание значений - x=1, y=2, z=3

